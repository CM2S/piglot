[project]
name = "piglot"
dynamic = ["version"]
description = "A package for the optimisation of numerical responses"
readme = "README.md"
requires-python = ">=3.9"
license = {file = "LICENSE.txt"}
keywords = ["optimisation", "parameter identification", "constitutive modelling"]
authors = [
    {name = "CM2S"}
]
maintainers = [
    {name = "Rui Coelho", email = "ruicoelhopedro@gmail.com" },
    {name = "Ana Francisca Alves", email = "afalves@fe.up.pt" },
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Build Tools",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3 :: Only",
]
dependencies = [
    "numpy<2", # https://github.com/pytorch/pytorch/issues/107302
    "tqdm",
    "pandas",
    "sympy",
    "scipy>=1.7", # For scipy.stats.qmc
    "torch",
    "botorch<0.12", # FixedNoiseGP has been deprecated, we need to update the code
    "Pillow",
    "matplotlib>=3.7.2", # https://github.com/matplotlib/matplotlib/pull/25565
    "PyYAML",
    "PyQt5",
]

[project.optional-dependencies]
lipo = ["lipo"]
genetic = ["geneticalgorithm"]
pso = ["pyswarms"]
full = ["lipo", "geneticalgorithm", "pyswarms"]
docs = ["sphinx", "myst-parser", "sphinx-rtd-theme", "sphinx-favicon"]
test = ["pytest", "pytest-cov", "flake8", "coverage"]

[project.urls]
"Homepage" = "https://github.com/CM2S/piglot"
"Documentation" = "https://piglot.readthedocs.io/en/latest/"
"Bug Reports" = "https://github.com/CM2S/piglot/issues"
"Source" = "https://github.com/CM2S/piglot/"

[project.scripts]
piglot = "piglot.bin.piglot:main"
piglot-plot = "piglot.bin.piglot_plot:main"

[build-system]
requires = ["setuptools>=61.0.0", "wheel"] # Needed for dynamic version
build-backend = "setuptools.build_meta"

[tool.setuptools.dynamic]
version = {attr = "piglot.__version__"}

[tool.coverage.report]
omit = [
    # Ignore solvers, as there is no standard way of testing them
    "piglot/solver/*/*",
    # Ignore external optimisers
    "piglot/optimisers/ga.py",
    "piglot/optimisers/lipo_opt.py",
    "piglot/optimisers/pso.py",
]
